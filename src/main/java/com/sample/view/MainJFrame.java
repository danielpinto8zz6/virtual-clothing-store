/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sample.view;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import com.sample.Constants.Gender;
import com.sample.Constants.MaritalStatus;
import com.sample.model.Client;
import com.sample.model.Item;
import com.sample.model.Store;
import com.sample.utils.ItemsLoader;

/**
 *
 * @author daniel
 */
public class MainJFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private List<Client> clients;
    private Store store;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        clients = new ArrayList<Client>();
        store = new Store();
        clients.add(new Client("Marco", Gender.MALE, MaritalStatus.MARRIED, true));
        initComponents();
        setClients(clients);
    }

    public void setClients(List<Client> clients) {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Client client : clients) {
            listModel.addElement(client.toString());
        }
        jListClients.setModel(listModel);
    }

    public void setItems() {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Item item : store.getItems()) {
            listModel.addElement(item.toString());
        }
        jListItems.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClients = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListItems = new javax.swing.JList<>();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        jMenuItemInsertClient = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemLoadItems = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jListClients);

        jScrollPane2.setViewportView(jListItems);

        jMenu.setText("Insert");

        jMenuItemInsertClient.setText("Client");
        jMenuItemInsertClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemInsertClientActionPerformed(evt);
            }
        });
        jMenu.add(jMenuItemInsertClient);

        jMenuItem2.setText("Item");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu.add(jMenuItem2);

        jMenuBar.add(jMenu);

        jMenu1.setText("Load");

        jMenuItemLoadItems.setText("Items");
        jMenuItemLoadItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadItemsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLoadItems);

        jMenuBar.add(jMenu1);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
                        .addContainerGap()));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem2ActionPerformed
        InsertItemJDialog dialog = new InsertItemJDialog(this, true, store);
        Item item = dialog.showDialog();
        if (item != null) {
            store.addItem(item);
            setItems();
        }
    }// GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItemLoadItemsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItemLoadItemsActionPerformed
        JFileChooser fileChooser = getFileChooser();

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (ItemsLoader.fromFile(file) == null) {
                JOptionPane.showMessageDialog(this, "File is not compatible.");
            } else {
                store.setItems(ItemsLoader.fromFile(file));
                setItems();
            }
        }
    }// GEN-LAST:event_jMenuItemLoadItemsActionPerformed

    private JFileChooser getFileChooser() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);
        return fileChooser;
    }

    private void jMenuItemInsertClientActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItemInsertClientActionPerformed
        InsertClientDialog dialog = new InsertClientDialog(this, true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            // @Override
            // public void windowClosing(java.awt.event.WindowEvent e) {
            // System.exit(0);
            // }
        });
        dialog.setVisible(true);
    }// GEN-LAST:event_jMenuItemInsertClientActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jListClients;
    private javax.swing.JList<String> jListItems;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemInsertClient;
    private javax.swing.JMenuItem jMenuItemLoadItems;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
